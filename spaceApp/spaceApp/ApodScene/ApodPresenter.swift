//
//  ApodPresenter.swift
//  spaceApp
//
//  Created by Coldefy Yoann on 2016/07/17.
//  Copyright (c) 2016年 YoannColdefy. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol ApodPresenterInput {
	func presentApod(response: ApodResponse)
	func presentError(response: ApodErrorResponse)
}

protocol ApodPresenterOutput: class {
	func displayApod(viewModel: ApodDataViewModel)
	func displayApodError(viewModel: ApodErrorViewModel)
	func displayImage(viewModel: ApodImageViewModel)
}

class ApodPresenter: ApodPresenterInput {
	weak var output: ApodPresenterOutput!
	
	// MARK: Presentation logic
	
	func presentApod(response: ApodResponse) {
		let apodViewModel = makeApodViewModel(apodData: response.apodData)
		output.displayApod(viewModel: apodViewModel)
		
		DispatchQueue.global(qos: .userInitiated).async {
			let imageViewModel = self.makeApodImageViewModel(apodData: response.apodData)
			DispatchQueue.main.async {
				self.output.displayImage(viewModel: imageViewModel)
			}
		}
	}
	
	private func makeApodViewModel(apodData: ApodData) -> ApodDataViewModel {
		let title = apodData.title
		let date = dateToString(date: apodData.date)
		let explanation = apodData.explanation
		let copyright = apodData.copyright
		
		return ApodDataViewModel(title: title, date: date, explanation: explanation, copyright: copyright)
	}
	
	private func makeApodImageViewModel(apodData: ApodData) -> ApodImageViewModel {
		let picture: UIImage?
		if let url = apodData.hdUrl {
			picture = loadImage(url: url)
		} else {
			picture = loadImage(url: apodData.url)
		}
		
		return ApodImageViewModel(picture: picture)
	}
	
	private func dateToString(date: Date) -> String {
		let formatter = DateFormatter()
		formatter.dateFormat = "yyyy年MM月dd日"
		return formatter.string(from: date)
	}
	
	private func loadImage(url: URL) -> UIImage? {
		guard let data = try? Data(contentsOf: url) else {
			return nil
		}
		
		return UIImage(data: data)
	}
	
	func presentError(response: ApodErrorResponse) {
		let viewModel = ApodErrorViewModel(errorMessage: response.error.localizedDescription)
		output.displayApodError(viewModel: viewModel)
	}
	
}
