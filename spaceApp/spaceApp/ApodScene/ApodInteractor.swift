//
//  ApodInteractor.swift
//  spaceApp
//
//  Created by Coldefy Yoann on 2016/07/17.
//  Copyright (c) 2016å¹´ YoannColdefy. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol ApodInteractorInput {
	func fetchTodayApod(request: TodayApodRequest)
	func fetchRandomApod(request: RandomApodRequest)
}

protocol ApodInteractorOutput {
	func presentApod(response: ApodResponse)
	func presentError(response: ApodErrorResponse)
	func presentPictureDownloadProgress(response: ApodPictureDownloadProgressResponse)
	func presentPicture(response: ApodPictureResponse)
}

class ApodInteractor: ApodInteractorInput {
	var output: ApodInteractorOutput!
	private var _apodWorker: ApodWorker
	private var _pictureDownloadWorker: PictureDownloadWorker

	init(apodWorker: ApodWorker, pictureDownloadWorker: PictureDownloadWorker) {
		_apodWorker = apodWorker
		_pictureDownloadWorker = pictureDownloadWorker
	}

	// MARK: Business logic
	func fetchTodayApod(request: TodayApodRequest) {
		_apodWorker.fetchTodayAPOD() {
			apodData, error in
			self.handleFetchResults(apodData: apodData, error: error)
		}
	}

	func fetchRandomApod(request: RandomApodRequest) {
		_apodWorker.fetchRandomApod() {
			apodData, error in
			self.handleFetchResults(apodData: apodData, error: error)
		}
	}

	private func handleFetchResults(apodData: ApodData?, error: Error?) {
		if let apodData = apodData {
			handleApodData(apodData: apodData)
		}

		if let error = error {
			handleError(error: error)
		}
	}

	private func handleApodData(apodData: ApodData) {
		let response = ApodResponse(apodData: apodData)
		self.output.presentApod(response: response)

		downloadPicture(apodData: apodData)
	}

	private func handleError(error: Error) {
		let response = ApodErrorResponse(error: error)
		self.output.presentError(response: response)
	}

	private func downloadPicture(apodData: ApodData) {
		let url = getValidURL(apodData: apodData)

		_pictureDownloadWorker.downolad(url: url,
		                                progressHandler: handleDownloadProgress,
		                                completionHandler: handleDownloadCompletion)
	}

	private func getValidURL(apodData: ApodData) -> URL {
		if let hdUrl = apodData.hdUrl {
			return hdUrl
		} else {
			return apodData.url
		}
	}

	private func handleDownloadProgress(progress: Double) {
		let response = ApodPictureDownloadProgressResponse(progressRatio: progress)
		output.presentPictureDownloadProgress(response: response)
	}

	private func handleDownloadCompletion(picture: UIImage?, error: Error?) {
		if let picture = picture {
			let response = ApodPictureResponse(picture: picture)
			output.presentPicture(response: response)
		}

		if let error = error {
			handleError(error: error)
		}
	}
}
